---
- name: Install required packages / tools
  hosts: all
  vars:
    configure_docker: true

    # Kubernetes
    configure_k3s: false
    configure_microk8s: false
    configure_helm: false

    configure_kvm: false
    configure_terraform: false
    configure_tailscale: false
    configure_netplan: false

  tasks:
    - name: Configure Docker
      when: configure_docker | default(false) | bool
      ansible.builtin.include_role:
        name: geerlingguy.docker
      vars:
        ansible_become: true
        docker_users:
          - "{{ ansible_env.USER }}"

    - name: Configure Docker proxies
      when: configure_docker | default(false) | bool and (ansible_env.HTTP_PROXY is defined or ansible_env.HTTPS_PROXY is defined or ansible_env.NO_PROXY is defined)
      block:
        - name: Create systemd directory for Docker service
          ansible.builtin.file:
            path: /etc/systemd/system/docker.service.d
            state: directory
          become: true

        - name: Set Docker daemon proxies
          ansible.builtin.template:
            src: ./templates/http-proxy.conf.j2
            dest: /etc/systemd/system/docker.service.d/http-proxy.conf
            backup: true
          notify: "Restart Docker service"
          become: true

        - name: Create directory for Docker client
          ansible.builtin.file:
            path: "{{ ansible_user_dir }}/.docker"
            state: directory

        - name: Set Docker daemon proxies
          ansible.builtin.template:
            src: ./templates/config.json.j2
            dest: "{{ ansible_user_dir }}/.docker/config.json"
            backup: true
          notify: "Restart Docker service"

    - name: Configure K3s
      when: configure_k3s | default(false) | bool
      ansible.builtin.include_role:
        name: xanmanning.k3s
      vars:
        k3s_become: true
        # k3s_server:
          # docker: true
          # disable:
          #   - coredns
          #   - traefik

    - name: Configure MicroK8s
      when: configure_microk8s | default(false) | bool
      ansible.builtin.include_role:
        name: racqspace.microk8s
      vars:
        ansible_become: true
        microk8s_plugins:
          # https://github.com/racqspace/ansible-role-microk8s/blob/main/defaults/main.yml
          dashboard: true
        microk8s_registry_size: 20Gi
        microk8s_users:
          - "{{ ansible_env.USER }}"

    - name: Configure Helm
      when: configure_helm | default(false) | bool
      ansible.builtin.include_role:
        name: andrewrothstein.kubernetes-helm

    - name: Configure KVM
      when: configure_kvm | default(false) | bool
      block:
        - name: Install required system packages
          ansible.builtin.apt:
            pkg:
              - virt-manager
              - qemu-kvm
              - libguestfs-tools
              - libosinfo-bin
              - bridge-utils
            state: present
            update_cache: true
          become: true

        - name: Create pool directory
          ansible.builtin.file:
            path: /var/lib/libvirt/images
            state: directory
          become: true

        - name: Create default pool
          ansible.builtin.command:
            cmd: virsh pool-define-as --name default --type dir --target /var/lib/libvirt/images
          register: pool_define
          changed_when: "'Pool default defined' in pool_define.stdout"
          become: true

        - name: Create default pool
          ansible.builtin.command:
            cmd: virsh pool-start default
          register: pool_start
          changed_when: "'Pool default started' in pool_start.stdout"
          become: true

        - name: Create default pool
          ansible.builtin.command:
            cmd: virsh pool-autostart default
          register: pool_autostart
          changed_when: "'Pool default marked as autostarted' in pool_autostart.stdout"
          become: true

        - name: Create default pool
          ansible.builtin.command:
            cmd: sed -i "s/#security_driver = \"selinux\"/security_driver = \"none\"/g" /etc/libvirt/qemu.conf
          become: true

        - name: Restart libvirtd service
          ansible.builtin.debug:
            msg: "Run 'newgrp libvirt' to take effect."
          notify: "Restart libvirtd service"

    - name: Configure Terraform
      when: configure_terraform | default(false) | bool
      ansible.builtin.include_role:
        name: andrewrothstein.terraform

    - name: Configure Tailscale
      when: configure_tailscale | default(false) | bool
      ansible.builtin.include_role:
        name: artis3n.tailscale
      vars:
        tailscale_authkey: ""
        tailscale_up_skip: true
        # tailscale_args: "--accept-routes=false --advertise-routes={{ subnet_blocks  |  join(',') }}"

    - name: Configure Netplan
      when: configure_netplan | default(false) | bool
      ansible.builtin.include_role:
        name: mrlesmithjr.netplan
      vars:
        ansible_become: true
        netplan_enabled: true
        netplan_config_file: /etc/netplan/01-network-manager-all.yaml
        netplan_renderer: NetworkManager
        netplan_configuration: '{
          "network": {
            "ethernets": {
              "{{ ansible_default_ipv4.interface }}": {
                "dhcp4": true
              }
            },
            "bridges": {
              "br0": {
                "dhcp4": true,
                "interfaces": [
                  "{{ ansible_default_ipv4.interface }}"
                ]
              }
            }
          }
        }'
